{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","previousDateProp","name","props","prevName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerIdClock","handleHiddenClock","e","preventDefault","button","handleClockAppearance","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,KAAKR,EAAKS,cAAcC,OAAO,IAAK,MAC3C,OAdP,gCAiBE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KACFE,EAAWH,EAAiBC,KAE5BA,IAASE,GACbP,QAAQQ,MAAR,uBAA8BD,EAA9B,eAA6CF,MAtBnD,kCA0BE,WACEI,cAAcb,KAAKD,WA3BvB,oBA8BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACIL,IAGH,YAED,sBAAMK,UAAU,cAAhB,SACGjB,EAAKS,cAAcC,OAAO,IAAK,YA3C1C,GAA2BQ,a,MCP3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEC,aAAe,EANjB,EAuBEC,kBAAoB,SAACC,GACnBA,EAAEC,iBAEe,IAAbD,EAAEE,QACJ,EAAKxB,SAAS,CAAEkB,UAAU,KA3BhC,EA+BEO,sBAAwB,WACtB,EAAKzB,SAAS,CAAEkB,UAAU,KAhC9B,uDAQE,WAAqB,IAAD,OAClBrB,KAAKuB,aAAetB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAEHa,SAASC,iBAAiB,cAAe9B,KAAKwB,mBAC9CK,SAASC,iBAAiB,QAAS9B,KAAK4B,yBAd5C,kCAiBE,WACEf,cAAcb,KAAKuB,cACnBM,SAASE,oBAAoB,cAAe/B,KAAKwB,mBACjDK,SAASE,oBAAoB,QAAS/B,KAAK4B,yBApB/C,oBAmCE,WACE,MAAgC5B,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECO,GACC,cAAC,EAAD,CACEZ,KAAMa,WA5ClB,GAAyBP,aCZzBiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.08959ed9.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n\n      console.info(date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(previousDateProp: Props) {\n    const { name } = this.props;\n    const prevName = previousDateProp.name;\n\n    if (!(name === prevName)) {\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          { name }\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdClock = 0;\n\n  componentDidMount() {\n    this.timerIdClock = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleHiddenClock);\n    document.addEventListener('click', this.handleClockAppearance);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerIdClock);\n    document.removeEventListener('contextmenu', this.handleHiddenClock);\n    document.removeEventListener('click', this.handleClockAppearance);\n  }\n\n  handleHiddenClock = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (e.button === 2) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleClockAppearance = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            name={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}